/*
 * This file is generated by jOOQ.
*/
package com.youbc.generated.schema.tables;


import com.youbc.generated.schema.Keys;
import com.youbc.generated.schema.PokeYouBc;
import com.youbc.generated.schema.tables.records.PendingNotificationRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PendingNotification extends TableImpl<PendingNotificationRecord> {

    private static final long serialVersionUID = -1587508028;

    /**
     * The reference instance of <code>poke_you_bc.pending_notification</code>
     */
    public static final PendingNotification PENDING_NOTIFICATION = new PendingNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PendingNotificationRecord> getRecordType() {
        return PendingNotificationRecord.class;
    }

    /**
     * The column <code>poke_you_bc.pending_notification.id</code>.
     */
    public final TableField<PendingNotificationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>poke_you_bc.pending_notification.subject</code>.
     */
    public final TableField<PendingNotificationRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>poke_you_bc.pending_notification.wechatId</code>.
     */
    public final TableField<PendingNotificationRecord, String> WECHATID = createField("wechatId", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>poke_you_bc.pending_notification.username</code>.
     */
    public final TableField<PendingNotificationRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>poke_you_bc.pending_notification.thumbnail_image_url</code>.
     */
    public final TableField<PendingNotificationRecord, String> THUMBNAIL_IMAGE_URL = createField("thumbnail_image_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>poke_you_bc.pending_notification.time_created</code>.
     */
    public final TableField<PendingNotificationRecord, Timestamp> TIME_CREATED = createField("time_created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>poke_you_bc.pending_notification</code> table reference
     */
    public PendingNotification() {
        this("pending_notification", null);
    }

    /**
     * Create an aliased <code>poke_you_bc.pending_notification</code> table reference
     */
    public PendingNotification(String alias) {
        this(alias, PENDING_NOTIFICATION);
    }

    private PendingNotification(String alias, Table<PendingNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private PendingNotification(String alias, Table<PendingNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PokeYouBc.POKE_YOU_BC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PendingNotificationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PENDING_NOTIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PendingNotificationRecord> getPrimaryKey() {
        return Keys.KEY_PENDING_NOTIFICATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PendingNotificationRecord>> getKeys() {
        return Arrays.<UniqueKey<PendingNotificationRecord>>asList(Keys.KEY_PENDING_NOTIFICATION_PRIMARY, Keys.KEY_PENDING_NOTIFICATION_SUBJECT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PendingNotificationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PendingNotificationRecord, ?>>asList(Keys.PENDING_NOTIFICATION_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PendingNotification as(String alias) {
        return new PendingNotification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PendingNotification rename(String name) {
        return new PendingNotification(name, null);
    }
}
